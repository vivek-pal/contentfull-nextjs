"""Represents a binary file in a space. An asset can be any file type."""
type Asset {
  contentType(locale: String): String
  contentfulMetadata: ContentfulMetadata!
  description(locale: String): String
  fileName(locale: String): String
  height(locale: String): Int
  linkedFrom(allowedLocales: [String]): AssetLinkingCollections
  size(locale: String): Int
  sys: Sys!
  title(locale: String): String
  url(locale: String, transform: ImageTransformOptions): String
  width(locale: String): Int
}

type AssetCollection {
  items: [Asset]!
  limit: Int!
  skip: Int!
  total: Int!
}

input AssetFilter {
  AND: [AssetFilter]
  OR: [AssetFilter]
  contentType: String
  contentType_contains: String
  contentType_exists: Boolean
  contentType_in: [String]
  contentType_not: String
  contentType_not_contains: String
  contentType_not_in: [String]
  contentfulMetadata: ContentfulMetadataFilter
  description: String
  description_contains: String
  description_exists: Boolean
  description_in: [String]
  description_not: String
  description_not_contains: String
  description_not_in: [String]
  fileName: String
  fileName_contains: String
  fileName_exists: Boolean
  fileName_in: [String]
  fileName_not: String
  fileName_not_contains: String
  fileName_not_in: [String]
  height: Int
  height_exists: Boolean
  height_gt: Int
  height_gte: Int
  height_in: [Int]
  height_lt: Int
  height_lte: Int
  height_not: Int
  height_not_in: [Int]
  size: Int
  size_exists: Boolean
  size_gt: Int
  size_gte: Int
  size_in: [Int]
  size_lt: Int
  size_lte: Int
  size_not: Int
  size_not_in: [Int]
  sys: SysFilter
  title: String
  title_contains: String
  title_exists: Boolean
  title_in: [String]
  title_not: String
  title_not_contains: String
  title_not_in: [String]
  url: String
  url_contains: String
  url_exists: Boolean
  url_in: [String]
  url_not: String
  url_not_contains: String
  url_not_in: [String]
  width: Int
  width_exists: Boolean
  width_gt: Int
  width_gte: Int
  width_in: [Int]
  width_lt: Int
  width_lte: Int
  width_not: Int
  width_not_in: [Int]
}

type AssetLinkingCollections {
  authorCollection(limit: Int = 100, locale: String, preview: Boolean, skip: Int = 0): AuthorCollection
  componentAuthorCollection(limit: Int = 100, locale: String, preview: Boolean, skip: Int = 0): ComponentAuthorCollection
  componentRichImageCollection(limit: Int = 100, locale: String, preview: Boolean, skip: Int = 0): ComponentRichImageCollection
  componentSeoCollection(limit: Int = 100, locale: String, preview: Boolean, skip: Int = 0): ComponentSeoCollection
  entryCollection(limit: Int = 100, locale: String, preview: Boolean, skip: Int = 0): EntryCollection
  featuredProductImageCollection(limit: Int = 100, locale: String, preview: Boolean, skip: Int = 0): FeaturedProductImageCollection
  pageBlogPostCollection(limit: Int = 100, locale: String, preview: Boolean, skip: Int = 0): PageBlogPostCollection
  pageLandingCollection(limit: Int = 100, locale: String, preview: Boolean, skip: Int = 0): PageLandingCollection
  pageProductCollection(limit: Int = 100, locale: String, preview: Boolean, skip: Int = 0): PageProductCollection
  postCollection(limit: Int = 100, locale: String, preview: Boolean, skip: Int = 0): PostCollection
}

enum AssetOrder {
  contentType_ASC
  contentType_DESC
  fileName_ASC
  fileName_DESC
  height_ASC
  height_DESC
  size_ASC
  size_DESC
  sys_firstPublishedAt_ASC
  sys_firstPublishedAt_DESC
  sys_id_ASC
  sys_id_DESC
  sys_publishedAt_ASC
  sys_publishedAt_DESC
  sys_publishedVersion_ASC
  sys_publishedVersion_DESC
  url_ASC
  url_DESC
  width_ASC
  width_DESC
}

"""
[See type definition](https://app.contentful.com/spaces/z4jcpsk27kde/content_types/author)
"""
type Author implements Entry {
  contentfulMetadata: ContentfulMetadata!
  linkedFrom(allowedLocales: [String]): AuthorLinkingCollections
  name(locale: String): String
  picture(locale: String, preview: Boolean): Asset
  sys: Sys!
}

type AuthorCollection {
  items: [Author]!
  limit: Int!
  skip: Int!
  total: Int!
}

input AuthorFilter {
  AND: [AuthorFilter]
  OR: [AuthorFilter]
  contentfulMetadata: ContentfulMetadataFilter
  name: String
  name_contains: String
  name_exists: Boolean
  name_in: [String]
  name_not: String
  name_not_contains: String
  name_not_in: [String]
  picture_exists: Boolean
  sys: SysFilter
}

type AuthorLinkingCollections {
  entryCollection(limit: Int = 100, locale: String, preview: Boolean, skip: Int = 0): EntryCollection
  postCollection(limit: Int = 100, locale: String, order: [AuthorLinkingCollectionsPostCollectionOrder], preview: Boolean, skip: Int = 0): PostCollection
}

enum AuthorLinkingCollectionsPostCollectionOrder {
  date_ASC
  date_DESC
  excerpt_ASC
  excerpt_DESC
  slug_ASC
  slug_DESC
  sys_firstPublishedAt_ASC
  sys_firstPublishedAt_DESC
  sys_id_ASC
  sys_id_DESC
  sys_publishedAt_ASC
  sys_publishedAt_DESC
  sys_publishedVersion_ASC
  sys_publishedVersion_DESC
  title_ASC
  title_DESC
}

enum AuthorOrder {
  name_ASC
  name_DESC
  sys_firstPublishedAt_ASC
  sys_firstPublishedAt_DESC
  sys_id_ASC
  sys_id_DESC
  sys_publishedAt_ASC
  sys_publishedAt_DESC
  sys_publishedVersion_ASC
  sys_publishedVersion_DESC
}

"""
To have author-related properties [See type definition](https://app.contentful.com/spaces/z4jcpsk27kde/content_types/componentAuthor)
"""
type ComponentAuthor implements Entry {
  avatar(locale: String, preview: Boolean): Asset
  contentfulMetadata: ContentfulMetadata!
  internalName(locale: String): String
  linkedFrom(allowedLocales: [String]): ComponentAuthorLinkingCollections
  name(locale: String): String
  sys: Sys!
}

type ComponentAuthorCollection {
  items: [ComponentAuthor]!
  limit: Int!
  skip: Int!
  total: Int!
}

input ComponentAuthorFilter {
  AND: [ComponentAuthorFilter]
  OR: [ComponentAuthorFilter]
  avatar_exists: Boolean
  contentfulMetadata: ContentfulMetadataFilter
  internalName: String
  internalName_contains: String
  internalName_exists: Boolean
  internalName_in: [String]
  internalName_not: String
  internalName_not_contains: String
  internalName_not_in: [String]
  name: String
  name_contains: String
  name_exists: Boolean
  name_in: [String]
  name_not: String
  name_not_contains: String
  name_not_in: [String]
  sys: SysFilter
}

type ComponentAuthorLinkingCollections {
  entryCollection(limit: Int = 100, locale: String, preview: Boolean, skip: Int = 0): EntryCollection
  pageBlogPostCollection(limit: Int = 100, locale: String, order: [ComponentAuthorLinkingCollectionsPageBlogPostCollectionOrder], preview: Boolean, skip: Int = 0): PageBlogPostCollection
}

enum ComponentAuthorLinkingCollectionsPageBlogPostCollectionOrder {
  internalName_ASC
  internalName_DESC
  publishedDate_ASC
  publishedDate_DESC
  slug_ASC
  slug_DESC
  sys_firstPublishedAt_ASC
  sys_firstPublishedAt_DESC
  sys_id_ASC
  sys_id_DESC
  sys_publishedAt_ASC
  sys_publishedAt_DESC
  sys_publishedVersion_ASC
  sys_publishedVersion_DESC
  title_ASC
  title_DESC
}

enum ComponentAuthorOrder {
  internalName_ASC
  internalName_DESC
  name_ASC
  name_DESC
  sys_firstPublishedAt_ASC
  sys_firstPublishedAt_DESC
  sys_id_ASC
  sys_id_DESC
  sys_publishedAt_ASC
  sys_publishedAt_DESC
  sys_publishedVersion_ASC
  sys_publishedVersion_DESC
}

"""
To describe an image used in rich text fields [See type definition](https://app.contentful.com/spaces/z4jcpsk27kde/content_types/componentRichImage)
"""
type ComponentRichImage implements Entry {
  caption(locale: String): String
  contentfulMetadata: ContentfulMetadata!
  fullWidth(locale: String): Boolean
  image(locale: String, preview: Boolean): Asset
  internalName(locale: String): String
  linkedFrom(allowedLocales: [String]): ComponentRichImageLinkingCollections
  sys: Sys!
}

type ComponentRichImageCollection {
  items: [ComponentRichImage]!
  limit: Int!
  skip: Int!
  total: Int!
}

input ComponentRichImageFilter {
  AND: [ComponentRichImageFilter]
  OR: [ComponentRichImageFilter]
  caption: String
  caption_contains: String
  caption_exists: Boolean
  caption_in: [String]
  caption_not: String
  caption_not_contains: String
  caption_not_in: [String]
  contentfulMetadata: ContentfulMetadataFilter
  fullWidth: Boolean
  fullWidth_exists: Boolean
  fullWidth_not: Boolean
  image_exists: Boolean
  internalName: String
  internalName_contains: String
  internalName_exists: Boolean
  internalName_in: [String]
  internalName_not: String
  internalName_not_contains: String
  internalName_not_in: [String]
  sys: SysFilter
}

type ComponentRichImageLinkingCollections {
  entryCollection(limit: Int = 100, locale: String, preview: Boolean, skip: Int = 0): EntryCollection
}

enum ComponentRichImageOrder {
  caption_ASC
  caption_DESC
  fullWidth_ASC
  fullWidth_DESC
  internalName_ASC
  internalName_DESC
  sys_firstPublishedAt_ASC
  sys_firstPublishedAt_DESC
  sys_id_ASC
  sys_id_DESC
  sys_publishedAt_ASC
  sys_publishedAt_DESC
  sys_publishedVersion_ASC
  sys_publishedVersion_DESC
}

"""
To have SEO-related properties to the pages we render [See type definition](https://app.contentful.com/spaces/z4jcpsk27kde/content_types/componentSeo)
"""
type ComponentSeo implements Entry {
  canonicalUrl(locale: String): String
  contentfulMetadata: ContentfulMetadata!
  follow(locale: String): Boolean
  index(locale: String): Boolean
  internalName(locale: String): String
  linkedFrom(allowedLocales: [String]): ComponentSeoLinkingCollections
  noFollow(locale: String): Boolean
  noIndex(locale: String): Boolean
  pageDescription(locale: String): String
  pageTitle(locale: String): String
  shareImagesCollection(limit: Int = 100, locale: String, preview: Boolean, skip: Int = 0): AssetCollection
  sys: Sys!
}

type ComponentSeoCollection {
  items: [ComponentSeo]!
  limit: Int!
  skip: Int!
  total: Int!
}

input ComponentSeoFilter {
  AND: [ComponentSeoFilter]
  OR: [ComponentSeoFilter]
  canonicalUrl: String
  canonicalUrl_contains: String
  canonicalUrl_exists: Boolean
  canonicalUrl_in: [String]
  canonicalUrl_not: String
  canonicalUrl_not_contains: String
  canonicalUrl_not_in: [String]
  contentfulMetadata: ContentfulMetadataFilter
  follow: Boolean
  follow_exists: Boolean
  follow_not: Boolean
  index: Boolean
  index_exists: Boolean
  index_not: Boolean
  internalName: String
  internalName_contains: String
  internalName_exists: Boolean
  internalName_in: [String]
  internalName_not: String
  internalName_not_contains: String
  internalName_not_in: [String]
  noFollow: Boolean
  noFollow_exists: Boolean
  noFollow_not: Boolean
  noIndex: Boolean
  noIndex_exists: Boolean
  noIndex_not: Boolean
  pageDescription: String
  pageDescription_contains: String
  pageDescription_exists: Boolean
  pageDescription_in: [String]
  pageDescription_not: String
  pageDescription_not_contains: String
  pageDescription_not_in: [String]
  pageTitle: String
  pageTitle_contains: String
  pageTitle_exists: Boolean
  pageTitle_in: [String]
  pageTitle_not: String
  pageTitle_not_contains: String
  pageTitle_not_in: [String]
  shareImagesCollection_exists: Boolean
  sys: SysFilter
}

type ComponentSeoLinkingCollections {
  entryCollection(limit: Int = 100, locale: String, preview: Boolean, skip: Int = 0): EntryCollection
  pageBlogPostCollection(limit: Int = 100, locale: String, order: [ComponentSeoLinkingCollectionsPageBlogPostCollectionOrder], preview: Boolean, skip: Int = 0): PageBlogPostCollection
  pageLandingCollection(limit: Int = 100, locale: String, order: [ComponentSeoLinkingCollectionsPageLandingCollectionOrder], preview: Boolean, skip: Int = 0): PageLandingCollection
  pageProductCollection(limit: Int = 100, locale: String, order: [ComponentSeoLinkingCollectionsPageProductCollectionOrder], preview: Boolean, skip: Int = 0): PageProductCollection
}

enum ComponentSeoLinkingCollectionsPageBlogPostCollectionOrder {
  internalName_ASC
  internalName_DESC
  publishedDate_ASC
  publishedDate_DESC
  slug_ASC
  slug_DESC
  sys_firstPublishedAt_ASC
  sys_firstPublishedAt_DESC
  sys_id_ASC
  sys_id_DESC
  sys_publishedAt_ASC
  sys_publishedAt_DESC
  sys_publishedVersion_ASC
  sys_publishedVersion_DESC
  title_ASC
  title_DESC
}

enum ComponentSeoLinkingCollectionsPageLandingCollectionOrder {
  heroBannerHeadlineColor_ASC
  heroBannerHeadlineColor_DESC
  heroBannerHeadline_ASC
  heroBannerHeadline_DESC
  internalName_ASC
  internalName_DESC
  showTagCloud_ASC
  showTagCloud_DESC
  slug_ASC
  slug_DESC
  sys_firstPublishedAt_ASC
  sys_firstPublishedAt_DESC
  sys_id_ASC
  sys_id_DESC
  sys_publishedAt_ASC
  sys_publishedAt_DESC
  sys_publishedVersion_ASC
  sys_publishedVersion_DESC
}

enum ComponentSeoLinkingCollectionsPageProductCollectionOrder {
  description_ASC
  description_DESC
  internalName_ASC
  internalName_DESC
  name_ASC
  name_DESC
  price_ASC
  price_DESC
  slug_ASC
  slug_DESC
  sys_firstPublishedAt_ASC
  sys_firstPublishedAt_DESC
  sys_id_ASC
  sys_id_DESC
  sys_publishedAt_ASC
  sys_publishedAt_DESC
  sys_publishedVersion_ASC
  sys_publishedVersion_DESC
}

enum ComponentSeoOrder {
  canonicalUrl_ASC
  canonicalUrl_DESC
  follow_ASC
  follow_DESC
  index_ASC
  index_DESC
  internalName_ASC
  internalName_DESC
  noFollow_ASC
  noFollow_DESC
  noIndex_ASC
  noIndex_DESC
  pageTitle_ASC
  pageTitle_DESC
  sys_firstPublishedAt_ASC
  sys_firstPublishedAt_DESC
  sys_id_ASC
  sys_id_DESC
  sys_publishedAt_ASC
  sys_publishedAt_DESC
  sys_publishedVersion_ASC
  sys_publishedVersion_DESC
}

"""
[See type definition](https://app.contentful.com/spaces/z4jcpsk27kde/content_types/componentTextHighlight)
"""
type ComponentTextHighlight implements Entry {
  content(locale: String): ComponentTextHighlightContent
  contentfulMetadata: ContentfulMetadata!
  linkedFrom(allowedLocales: [String]): ComponentTextHighlightLinkingCollections
  name(locale: String): String
  styling(locale: String): String
  sys: Sys!
}

type ComponentTextHighlightCollection {
  items: [ComponentTextHighlight]!
  limit: Int!
  skip: Int!
  total: Int!
}

type ComponentTextHighlightContent {
  json: JSON!
  links: ComponentTextHighlightContentLinks!
}

type ComponentTextHighlightContentAssets {
  block: [Asset]!
  hyperlink: [Asset]!
}

type ComponentTextHighlightContentEntries {
  block: [Entry]!
  hyperlink: [Entry]!
  inline: [Entry]!
}

type ComponentTextHighlightContentLinks {
  assets: ComponentTextHighlightContentAssets!
  entries: ComponentTextHighlightContentEntries!
  resources: ComponentTextHighlightContentResources!
}

type ComponentTextHighlightContentResources {
  block: [ComponentTextHighlightContentResourcesBlock!]!
  hyperlink: [ComponentTextHighlightContentResourcesHyperlink!]!
  inline: [ComponentTextHighlightContentResourcesInline!]!
}

type ComponentTextHighlightContentResourcesBlock implements ResourceLink {
  sys: ResourceSys!
}

type ComponentTextHighlightContentResourcesHyperlink implements ResourceLink {
  sys: ResourceSys!
}

type ComponentTextHighlightContentResourcesInline implements ResourceLink {
  sys: ResourceSys!
}

input ComponentTextHighlightFilter {
  AND: [ComponentTextHighlightFilter]
  OR: [ComponentTextHighlightFilter]
  content_contains: String
  content_exists: Boolean
  content_not_contains: String
  contentfulMetadata: ContentfulMetadataFilter
  name: String
  name_contains: String
  name_exists: Boolean
  name_in: [String]
  name_not: String
  name_not_contains: String
  name_not_in: [String]
  styling: String
  styling_contains: String
  styling_exists: Boolean
  styling_in: [String]
  styling_not: String
  styling_not_contains: String
  styling_not_in: [String]
  sys: SysFilter
}

type ComponentTextHighlightLinkingCollections {
  entryCollection(limit: Int = 100, locale: String, preview: Boolean, skip: Int = 0): EntryCollection
  pageLandingCollection(limit: Int = 100, locale: String, order: [ComponentTextHighlightLinkingCollectionsPageLandingCollectionOrder], preview: Boolean, skip: Int = 0): PageLandingCollection
}

enum ComponentTextHighlightLinkingCollectionsPageLandingCollectionOrder {
  heroBannerHeadlineColor_ASC
  heroBannerHeadlineColor_DESC
  heroBannerHeadline_ASC
  heroBannerHeadline_DESC
  internalName_ASC
  internalName_DESC
  showTagCloud_ASC
  showTagCloud_DESC
  slug_ASC
  slug_DESC
  sys_firstPublishedAt_ASC
  sys_firstPublishedAt_DESC
  sys_id_ASC
  sys_id_DESC
  sys_publishedAt_ASC
  sys_publishedAt_DESC
  sys_publishedVersion_ASC
  sys_publishedVersion_DESC
}

enum ComponentTextHighlightOrder {
  name_ASC
  name_DESC
  styling_ASC
  styling_DESC
  sys_firstPublishedAt_ASC
  sys_firstPublishedAt_DESC
  sys_id_ASC
  sys_id_DESC
  sys_publishedAt_ASC
  sys_publishedAt_DESC
  sys_publishedVersion_ASC
  sys_publishedVersion_DESC
}

type ContentfulMetadata {
  tags: [ContentfulTag]!
}

input ContentfulMetadataFilter {
  tags: ContentfulMetadataTagsFilter
  tags_exists: Boolean
}

input ContentfulMetadataTagsFilter {
  id_contains_all: [String]
  id_contains_none: [String]
  id_contains_some: [String]
}

"""
Represents a tag entity for finding and organizing content easily.
    Find out more here: https://www.contentful.com/developers/docs/references/content-delivery-api/#/reference/content-tags
"""
type ContentfulTag {
  id: String
  name: String
}

"""
A date-time string at UTC, such as 2007-12-03T10:15:30Z,
    compliant with the 'date-time' format outlined in section 5.6 of
    the RFC 3339 profile of the ISO 8601 standard for representation
    of dates and times using the Gregorian calendar.
"""
scalar DateTime

"""
The 'Dimension' type represents dimensions as whole numeric values between `1` and `4000`.
"""
scalar Dimension

interface Entry {
  contentfulMetadata: ContentfulMetadata!
  sys: Sys!
}

type EntryCollection {
  items: [Entry]!
  limit: Int!
  skip: Int!
  total: Int!
}

input EntryFilter {
  AND: [EntryFilter]
  OR: [EntryFilter]
  contentfulMetadata: ContentfulMetadataFilter
  sys: SysFilter
}

enum EntryOrder {
  sys_firstPublishedAt_ASC
  sys_firstPublishedAt_DESC
  sys_id_ASC
  sys_id_DESC
  sys_publishedAt_ASC
  sys_publishedAt_DESC
  sys_publishedVersion_ASC
  sys_publishedVersion_DESC
}

"""
[See type definition](https://app.contentful.com/spaces/z4jcpsk27kde/content_types/featuredProductImage)
"""
type FeaturedProductImage implements Entry {
  contentType(locale: String): String
  contentfulMetadata: ContentfulMetadata!
  description(locale: String): String
  height(locale: String): String
  linkedFrom(allowedLocales: [String]): FeaturedProductImageLinkingCollections
  sys: Sys!
  titleCollection(limit: Int = 100, locale: String, preview: Boolean, skip: Int = 0): AssetCollection
  url(locale: String): String
  width(locale: String): String
}

type FeaturedProductImageCollection {
  items: [FeaturedProductImage]!
  limit: Int!
  skip: Int!
  total: Int!
}

input FeaturedProductImageFilter {
  AND: [FeaturedProductImageFilter]
  OR: [FeaturedProductImageFilter]
  contentType: String
  contentType_contains: String
  contentType_exists: Boolean
  contentType_in: [String]
  contentType_not: String
  contentType_not_contains: String
  contentType_not_in: [String]
  contentfulMetadata: ContentfulMetadataFilter
  description: String
  description_contains: String
  description_exists: Boolean
  description_in: [String]
  description_not: String
  description_not_contains: String
  description_not_in: [String]
  height: String
  height_contains: String
  height_exists: Boolean
  height_in: [String]
  height_not: String
  height_not_contains: String
  height_not_in: [String]
  sys: SysFilter
  titleCollection_exists: Boolean
  url: String
  url_contains: String
  url_exists: Boolean
  url_in: [String]
  url_not: String
  url_not_contains: String
  url_not_in: [String]
  width: String
  width_contains: String
  width_exists: Boolean
  width_in: [String]
  width_not: String
  width_not_contains: String
  width_not_in: [String]
}

type FeaturedProductImageLinkingCollections {
  entryCollection(limit: Int = 100, locale: String, preview: Boolean, skip: Int = 0): EntryCollection
}

enum FeaturedProductImageOrder {
  contentType_ASC
  contentType_DESC
  description_ASC
  description_DESC
  height_ASC
  height_DESC
  sys_firstPublishedAt_ASC
  sys_firstPublishedAt_DESC
  sys_id_ASC
  sys_id_DESC
  sys_publishedAt_ASC
  sys_publishedAt_DESC
  sys_publishedVersion_ASC
  sys_publishedVersion_DESC
  url_ASC
  url_DESC
  width_ASC
  width_DESC
}

"""
[See type definition](https://app.contentful.com/spaces/z4jcpsk27kde/content_types/footerItemGroup)
"""
type FooterItemGroup implements Entry {
  contentfulMetadata: ContentfulMetadata!
  footerItemsCollection(limit: Int = 100, locale: String, order: [FooterItemGroupFooterItemsCollectionOrder], preview: Boolean, skip: Int = 0, where: NavItemFilter): FooterItemGroupFooterItemsCollection
  linkedFrom(allowedLocales: [String]): FooterItemGroupLinkingCollections
  name(locale: String): String
  sys: Sys!
}

type FooterItemGroupCollection {
  items: [FooterItemGroup]!
  limit: Int!
  skip: Int!
  total: Int!
}

input FooterItemGroupFilter {
  AND: [FooterItemGroupFilter]
  OR: [FooterItemGroupFilter]
  contentfulMetadata: ContentfulMetadataFilter
  footerItems: cfNavItemNestedFilter
  footerItemsCollection_exists: Boolean
  name: String
  name_contains: String
  name_exists: Boolean
  name_in: [String]
  name_not: String
  name_not_contains: String
  name_not_in: [String]
  sys: SysFilter
}

type FooterItemGroupFooterItemsCollection {
  items: [NavItem]!
  limit: Int!
  skip: Int!
  total: Int!
}

enum FooterItemGroupFooterItemsCollectionOrder {
  href_ASC
  href_DESC
  name_ASC
  name_DESC
  sys_firstPublishedAt_ASC
  sys_firstPublishedAt_DESC
  sys_id_ASC
  sys_id_DESC
  sys_publishedAt_ASC
  sys_publishedAt_DESC
  sys_publishedVersion_ASC
  sys_publishedVersion_DESC
}

type FooterItemGroupLinkingCollections {
  entryCollection(limit: Int = 100, locale: String, preview: Boolean, skip: Int = 0): EntryCollection
}

enum FooterItemGroupOrder {
  name_ASC
  name_DESC
  sys_firstPublishedAt_ASC
  sys_firstPublishedAt_DESC
  sys_id_ASC
  sys_id_DESC
  sys_publishedAt_ASC
  sys_publishedAt_DESC
  sys_publishedVersion_ASC
  sys_publishedVersion_DESC
}

"""The 'HexColor' type represents color in `rgb:ffffff` string format."""
scalar HexColor

enum ImageFormat {
  AVIF

  """JPG image format."""
  JPG

  """
  Progressive JPG format stores multiple passes of an image in progressively higher detail.
          When a progressive image is loading, the viewer will first see a lower quality pixelated version which
          will gradually improve in detail, until the image is fully downloaded. This is to display an image as
          early as possible to make the layout look as designed.
  """
  JPG_PROGRESSIVE

  """PNG image format"""
  PNG

  """
  8-bit PNG images support up to 256 colors and weigh less than the standard 24-bit PNG equivalent.
          The 8-bit PNG format is mostly used for simple images, such as icons or logos.
  """
  PNG8

  """WebP image format."""
  WEBP
}

enum ImageResizeFocus {
  """Focus the resizing on the bottom."""
  BOTTOM

  """Focus the resizing on the bottom left."""
  BOTTOM_LEFT

  """Focus the resizing on the bottom right."""
  BOTTOM_RIGHT

  """Focus the resizing on the center."""
  CENTER

  """Focus the resizing on the largest face."""
  FACE

  """Focus the resizing on the area containing all the faces."""
  FACES

  """Focus the resizing on the left."""
  LEFT

  """Focus the resizing on the right."""
  RIGHT

  """Focus the resizing on the top."""
  TOP

  """Focus the resizing on the top left."""
  TOP_LEFT

  """Focus the resizing on the top right."""
  TOP_RIGHT
}

enum ImageResizeStrategy {
  """
  Crops a part of the original image to fit into the specified dimensions.
  """
  CROP

  """
  Resizes the image to the specified dimensions, cropping the image if needed.
  """
  FILL

  """Resizes the image to fit into the specified dimensions."""
  FIT

  """
  Resizes the image to the specified dimensions, padding the image if needed.
          Uses desired background color as padding color.
  """
  PAD

  """
  Resizes the image to the specified dimensions, changing the original aspect ratio if needed.
  """
  SCALE

  """Creates a thumbnail from the image."""
  THUMB
}

input ImageTransformOptions {
  """
  Desired background color, used with corner radius or `PAD` resize strategy.
          Defaults to transparent (for `PNG`, `PNG8` and `WEBP`) or white (for `JPG` and `JPG_PROGRESSIVE`).
  """
  backgroundColor: HexColor

  """
  Desired corner radius in pixels.
          Results in an image with rounded corners (pass `-1` for a full circle/ellipse).
          Defaults to `0`. Uses desired background color as padding color,
          unless the format is `JPG` or `JPG_PROGRESSIVE` and resize strategy is `PAD`, then defaults to white.
  """
  cornerRadius: Int

  """Desired image format. Defaults to the original image format."""
  format: ImageFormat

  """Desired height in pixels. Defaults to the original image height."""
  height: Dimension

  """
  Desired quality of the image in percents.
          Used for `PNG8`, `JPG`, `JPG_PROGRESSIVE` and `WEBP` formats.
  """
  quality: Quality

  """Desired resize focus area. Defaults to `CENTER`."""
  resizeFocus: ImageResizeFocus

  """Desired resize strategy. Defaults to `FIT`."""
  resizeStrategy: ImageResizeStrategy

  """Desired width in pixels. Defaults to the original image width."""
  width: Dimension
}

"""
The `JSON` scalar type represents JSON values as specified by [ECMA-404](http://www.ecma-international.org/publications/files/ECMA-ST/ECMA-404.pdf).
"""
scalar JSON

"""
[See type definition](https://app.contentful.com/spaces/z4jcpsk27kde/content_types/navItem)
"""
type NavItem implements Entry {
  contentfulMetadata: ContentfulMetadata!
  href(locale: String): String
  linkedFrom(allowedLocales: [String]): NavItemLinkingCollections
  name(locale: String): String
  sys: Sys!
}

type NavItemCollection {
  items: [NavItem]!
  limit: Int!
  skip: Int!
  total: Int!
}

input NavItemFilter {
  AND: [NavItemFilter]
  OR: [NavItemFilter]
  contentfulMetadata: ContentfulMetadataFilter
  href: String
  href_contains: String
  href_exists: Boolean
  href_in: [String]
  href_not: String
  href_not_contains: String
  href_not_in: [String]
  name: String
  name_contains: String
  name_exists: Boolean
  name_in: [String]
  name_not: String
  name_not_contains: String
  name_not_in: [String]
  sys: SysFilter
}

"""
[See type definition](https://app.contentful.com/spaces/z4jcpsk27kde/content_types/navItemGroup)
"""
type NavItemGroup implements Entry {
  contentfulMetadata: ContentfulMetadata!
  linkedFrom(allowedLocales: [String]): NavItemGroupLinkingCollections
  mainNav(locale: String): String
  name(locale: String): String
  navItemsCollection(limit: Int = 100, locale: String, order: [NavItemGroupNavItemsCollectionOrder], preview: Boolean, skip: Int = 0, where: NavItemFilter): NavItemGroupNavItemsCollection
  sys: Sys!
}

type NavItemGroupCollection {
  items: [NavItemGroup]!
  limit: Int!
  skip: Int!
  total: Int!
}

input NavItemGroupFilter {
  AND: [NavItemGroupFilter]
  OR: [NavItemGroupFilter]
  contentfulMetadata: ContentfulMetadataFilter
  mainNav: String
  mainNav_contains: String
  mainNav_exists: Boolean
  mainNav_in: [String]
  mainNav_not: String
  mainNav_not_contains: String
  mainNav_not_in: [String]
  name: String
  name_contains: String
  name_exists: Boolean
  name_in: [String]
  name_not: String
  name_not_contains: String
  name_not_in: [String]
  navItems: cfNavItemNestedFilter
  navItemsCollection_exists: Boolean
  sys: SysFilter
}

type NavItemGroupLinkingCollections {
  entryCollection(limit: Int = 100, locale: String, preview: Boolean, skip: Int = 0): EntryCollection
}

type NavItemGroupNavItemsCollection {
  items: [NavItem]!
  limit: Int!
  skip: Int!
  total: Int!
}

enum NavItemGroupNavItemsCollectionOrder {
  href_ASC
  href_DESC
  name_ASC
  name_DESC
  sys_firstPublishedAt_ASC
  sys_firstPublishedAt_DESC
  sys_id_ASC
  sys_id_DESC
  sys_publishedAt_ASC
  sys_publishedAt_DESC
  sys_publishedVersion_ASC
  sys_publishedVersion_DESC
}

enum NavItemGroupOrder {
  mainNav_ASC
  mainNav_DESC
  name_ASC
  name_DESC
  sys_firstPublishedAt_ASC
  sys_firstPublishedAt_DESC
  sys_id_ASC
  sys_id_DESC
  sys_publishedAt_ASC
  sys_publishedAt_DESC
  sys_publishedVersion_ASC
  sys_publishedVersion_DESC
}

type NavItemLinkingCollections {
  entryCollection(limit: Int = 100, locale: String, preview: Boolean, skip: Int = 0): EntryCollection
  footerItemGroupCollection(limit: Int = 100, locale: String, order: [NavItemLinkingCollectionsFooterItemGroupCollectionOrder], preview: Boolean, skip: Int = 0): FooterItemGroupCollection
  navItemGroupCollection(limit: Int = 100, locale: String, order: [NavItemLinkingCollectionsNavItemGroupCollectionOrder], preview: Boolean, skip: Int = 0): NavItemGroupCollection
}

enum NavItemLinkingCollectionsFooterItemGroupCollectionOrder {
  name_ASC
  name_DESC
  sys_firstPublishedAt_ASC
  sys_firstPublishedAt_DESC
  sys_id_ASC
  sys_id_DESC
  sys_publishedAt_ASC
  sys_publishedAt_DESC
  sys_publishedVersion_ASC
  sys_publishedVersion_DESC
}

enum NavItemLinkingCollectionsNavItemGroupCollectionOrder {
  mainNav_ASC
  mainNav_DESC
  name_ASC
  name_DESC
  sys_firstPublishedAt_ASC
  sys_firstPublishedAt_DESC
  sys_id_ASC
  sys_id_DESC
  sys_publishedAt_ASC
  sys_publishedAt_DESC
  sys_publishedVersion_ASC
  sys_publishedVersion_DESC
}

enum NavItemOrder {
  href_ASC
  href_DESC
  name_ASC
  name_DESC
  sys_firstPublishedAt_ASC
  sys_firstPublishedAt_DESC
  sys_id_ASC
  sys_id_DESC
  sys_publishedAt_ASC
  sys_publishedAt_DESC
  sys_publishedVersion_ASC
  sys_publishedVersion_DESC
}

"""
To create individual blog posts [See type definition](https://app.contentful.com/spaces/z4jcpsk27kde/content_types/pageBlogPost)
"""
type PageBlogPost implements Entry {
  author(locale: String, preview: Boolean, where: ComponentAuthorFilter): ComponentAuthor
  content(locale: String): PageBlogPostContent
  contentfulMetadata: ContentfulMetadata!
  featuredImage(locale: String, preview: Boolean): Asset
  internalName(locale: String): String
  linkedFrom(allowedLocales: [String]): PageBlogPostLinkingCollections
  publishedDate(locale: String): DateTime
  relatedBlogPostsCollection(limit: Int = 100, locale: String, order: [PageBlogPostRelatedBlogPostsCollectionOrder], preview: Boolean, skip: Int = 0, where: PageBlogPostFilter): PageBlogPostRelatedBlogPostsCollection
  seoFields(locale: String, preview: Boolean, where: ComponentSeoFilter): ComponentSeo
  shortDescription(locale: String): String
  slug(locale: String): String
  sys: Sys!
  title(locale: String): String
}

type PageBlogPostCollection {
  items: [PageBlogPost]!
  limit: Int!
  skip: Int!
  total: Int!
}

type PageBlogPostContent {
  json: JSON!
  links: PageBlogPostContentLinks!
}

type PageBlogPostContentAssets {
  block: [Asset]!
  hyperlink: [Asset]!
}

type PageBlogPostContentEntries {
  block: [Entry]!
  hyperlink: [Entry]!
  inline: [Entry]!
}

type PageBlogPostContentLinks {
  assets: PageBlogPostContentAssets!
  entries: PageBlogPostContentEntries!
  resources: PageBlogPostContentResources!
}

type PageBlogPostContentResources {
  block: [PageBlogPostContentResourcesBlock!]!
  hyperlink: [PageBlogPostContentResourcesHyperlink!]!
  inline: [PageBlogPostContentResourcesInline!]!
}

type PageBlogPostContentResourcesBlock implements ResourceLink {
  sys: ResourceSys!
}

type PageBlogPostContentResourcesHyperlink implements ResourceLink {
  sys: ResourceSys!
}

type PageBlogPostContentResourcesInline implements ResourceLink {
  sys: ResourceSys!
}

input PageBlogPostFilter {
  AND: [PageBlogPostFilter]
  OR: [PageBlogPostFilter]
  author: cfComponentAuthorNestedFilter
  author_exists: Boolean
  content_contains: String
  content_exists: Boolean
  content_not_contains: String
  contentfulMetadata: ContentfulMetadataFilter
  featuredImage_exists: Boolean
  internalName: String
  internalName_contains: String
  internalName_exists: Boolean
  internalName_in: [String]
  internalName_not: String
  internalName_not_contains: String
  internalName_not_in: [String]
  publishedDate: DateTime
  publishedDate_exists: Boolean
  publishedDate_gt: DateTime
  publishedDate_gte: DateTime
  publishedDate_in: [DateTime]
  publishedDate_lt: DateTime
  publishedDate_lte: DateTime
  publishedDate_not: DateTime
  publishedDate_not_in: [DateTime]
  relatedBlogPosts: cfPageBlogPostNestedFilter
  relatedBlogPostsCollection_exists: Boolean
  seoFields: cfComponentSeoNestedFilter
  seoFields_exists: Boolean
  shortDescription: String
  shortDescription_contains: String
  shortDescription_exists: Boolean
  shortDescription_in: [String]
  shortDescription_not: String
  shortDescription_not_contains: String
  shortDescription_not_in: [String]
  slug: String
  slug_contains: String
  slug_exists: Boolean
  slug_in: [String]
  slug_not: String
  slug_not_contains: String
  slug_not_in: [String]
  sys: SysFilter
  title: String
  title_contains: String
  title_exists: Boolean
  title_in: [String]
  title_not: String
  title_not_contains: String
  title_not_in: [String]
}

type PageBlogPostLinkingCollections {
  entryCollection(limit: Int = 100, locale: String, preview: Boolean, skip: Int = 0): EntryCollection
  pageBlogPostCollection(limit: Int = 100, locale: String, order: [PageBlogPostLinkingCollectionsPageBlogPostCollectionOrder], preview: Boolean, skip: Int = 0): PageBlogPostCollection
  pageLandingCollection(limit: Int = 100, locale: String, order: [PageBlogPostLinkingCollectionsPageLandingCollectionOrder], preview: Boolean, skip: Int = 0): PageLandingCollection
}

enum PageBlogPostLinkingCollectionsPageBlogPostCollectionOrder {
  internalName_ASC
  internalName_DESC
  publishedDate_ASC
  publishedDate_DESC
  slug_ASC
  slug_DESC
  sys_firstPublishedAt_ASC
  sys_firstPublishedAt_DESC
  sys_id_ASC
  sys_id_DESC
  sys_publishedAt_ASC
  sys_publishedAt_DESC
  sys_publishedVersion_ASC
  sys_publishedVersion_DESC
  title_ASC
  title_DESC
}

enum PageBlogPostLinkingCollectionsPageLandingCollectionOrder {
  heroBannerHeadlineColor_ASC
  heroBannerHeadlineColor_DESC
  heroBannerHeadline_ASC
  heroBannerHeadline_DESC
  internalName_ASC
  internalName_DESC
  showTagCloud_ASC
  showTagCloud_DESC
  slug_ASC
  slug_DESC
  sys_firstPublishedAt_ASC
  sys_firstPublishedAt_DESC
  sys_id_ASC
  sys_id_DESC
  sys_publishedAt_ASC
  sys_publishedAt_DESC
  sys_publishedVersion_ASC
  sys_publishedVersion_DESC
}

enum PageBlogPostOrder {
  internalName_ASC
  internalName_DESC
  publishedDate_ASC
  publishedDate_DESC
  slug_ASC
  slug_DESC
  sys_firstPublishedAt_ASC
  sys_firstPublishedAt_DESC
  sys_id_ASC
  sys_id_DESC
  sys_publishedAt_ASC
  sys_publishedAt_DESC
  sys_publishedVersion_ASC
  sys_publishedVersion_DESC
  title_ASC
  title_DESC
}

type PageBlogPostRelatedBlogPostsCollection {
  items: [PageBlogPost]!
  limit: Int!
  skip: Int!
  total: Int!
}

enum PageBlogPostRelatedBlogPostsCollectionOrder {
  internalName_ASC
  internalName_DESC
  publishedDate_ASC
  publishedDate_DESC
  slug_ASC
  slug_DESC
  sys_firstPublishedAt_ASC
  sys_firstPublishedAt_DESC
  sys_id_ASC
  sys_id_DESC
  sys_publishedAt_ASC
  sys_publishedAt_DESC
  sys_publishedVersion_ASC
  sys_publishedVersion_DESC
  title_ASC
  title_DESC
}

"""
To have an entry point for the app (e.g. Homepage) [See type definition](https://app.contentful.com/spaces/z4jcpsk27kde/content_types/pageLanding)
"""
type PageLanding implements Entry {
  content(locale: String): PageLandingContent
  contentfulMetadata: ContentfulMetadata!
  featuredBlogPost(locale: String, preview: Boolean, where: PageBlogPostFilter): PageBlogPost
  heroBannerHeadline(locale: String): String
  heroBannerHeadlineColor(locale: String): String
  heroBannerImage(locale: String, preview: Boolean): Asset
  internalName(locale: String): String
  linkedFrom(allowedLocales: [String]): PageLandingLinkingCollections
  logo(locale: String, preview: Boolean): Asset
  productsCollectionCollection(limit: Int = 100, locale: String, order: [PageLandingProductsCollectionCollectionOrder], preview: Boolean, skip: Int = 0, where: PageProductFilter): PageLandingProductsCollectionCollection
  seoFields(locale: String, preview: Boolean, where: ComponentSeoFilter): ComponentSeo
  showTagCloud(locale: String): String
  slug(locale: String): String
  sys: Sys!
  textHighlightCollection(limit: Int = 100, locale: String, order: [PageLandingTextHighlightCollectionOrder], preview: Boolean, skip: Int = 0, where: ComponentTextHighlightFilter): PageLandingTextHighlightCollection
}

type PageLandingCollection {
  items: [PageLanding]!
  limit: Int!
  skip: Int!
  total: Int!
}

type PageLandingContent {
  json: JSON!
  links: PageLandingContentLinks!
}

type PageLandingContentAssets {
  block: [Asset]!
  hyperlink: [Asset]!
}

type PageLandingContentEntries {
  block: [Entry]!
  hyperlink: [Entry]!
  inline: [Entry]!
}

type PageLandingContentLinks {
  assets: PageLandingContentAssets!
  entries: PageLandingContentEntries!
  resources: PageLandingContentResources!
}

type PageLandingContentResources {
  block: [PageLandingContentResourcesBlock!]!
  hyperlink: [PageLandingContentResourcesHyperlink!]!
  inline: [PageLandingContentResourcesInline!]!
}

type PageLandingContentResourcesBlock implements ResourceLink {
  sys: ResourceSys!
}

type PageLandingContentResourcesHyperlink implements ResourceLink {
  sys: ResourceSys!
}

type PageLandingContentResourcesInline implements ResourceLink {
  sys: ResourceSys!
}

input PageLandingFilter {
  AND: [PageLandingFilter]
  OR: [PageLandingFilter]
  content_contains: String
  content_exists: Boolean
  content_not_contains: String
  contentfulMetadata: ContentfulMetadataFilter
  featuredBlogPost: cfPageBlogPostNestedFilter
  featuredBlogPost_exists: Boolean
  heroBannerHeadline: String
  heroBannerHeadlineColor: String
  heroBannerHeadlineColor_contains: String
  heroBannerHeadlineColor_exists: Boolean
  heroBannerHeadlineColor_in: [String]
  heroBannerHeadlineColor_not: String
  heroBannerHeadlineColor_not_contains: String
  heroBannerHeadlineColor_not_in: [String]
  heroBannerHeadline_contains: String
  heroBannerHeadline_exists: Boolean
  heroBannerHeadline_in: [String]
  heroBannerHeadline_not: String
  heroBannerHeadline_not_contains: String
  heroBannerHeadline_not_in: [String]
  heroBannerImage_exists: Boolean
  internalName: String
  internalName_contains: String
  internalName_exists: Boolean
  internalName_in: [String]
  internalName_not: String
  internalName_not_contains: String
  internalName_not_in: [String]
  logo_exists: Boolean
  productsCollection: cfPageProductNestedFilter
  productsCollectionCollection_exists: Boolean
  seoFields: cfComponentSeoNestedFilter
  seoFields_exists: Boolean
  showTagCloud: String
  showTagCloud_contains: String
  showTagCloud_exists: Boolean
  showTagCloud_in: [String]
  showTagCloud_not: String
  showTagCloud_not_contains: String
  showTagCloud_not_in: [String]
  slug: String
  slug_contains: String
  slug_exists: Boolean
  slug_in: [String]
  slug_not: String
  slug_not_contains: String
  slug_not_in: [String]
  sys: SysFilter
  textHighlight: cfComponentTextHighlightNestedFilter
  textHighlightCollection_exists: Boolean
}

type PageLandingLinkingCollections {
  entryCollection(limit: Int = 100, locale: String, preview: Boolean, skip: Int = 0): EntryCollection
}

enum PageLandingOrder {
  heroBannerHeadlineColor_ASC
  heroBannerHeadlineColor_DESC
  heroBannerHeadline_ASC
  heroBannerHeadline_DESC
  internalName_ASC
  internalName_DESC
  showTagCloud_ASC
  showTagCloud_DESC
  slug_ASC
  slug_DESC
  sys_firstPublishedAt_ASC
  sys_firstPublishedAt_DESC
  sys_id_ASC
  sys_id_DESC
  sys_publishedAt_ASC
  sys_publishedAt_DESC
  sys_publishedVersion_ASC
  sys_publishedVersion_DESC
}

type PageLandingProductsCollectionCollection {
  items: [PageProduct]!
  limit: Int!
  skip: Int!
  total: Int!
}

enum PageLandingProductsCollectionCollectionOrder {
  description_ASC
  description_DESC
  internalName_ASC
  internalName_DESC
  name_ASC
  name_DESC
  price_ASC
  price_DESC
  slug_ASC
  slug_DESC
  sys_firstPublishedAt_ASC
  sys_firstPublishedAt_DESC
  sys_id_ASC
  sys_id_DESC
  sys_publishedAt_ASC
  sys_publishedAt_DESC
  sys_publishedVersion_ASC
  sys_publishedVersion_DESC
}

type PageLandingTextHighlightCollection {
  items: [ComponentTextHighlight]!
  limit: Int!
  skip: Int!
  total: Int!
}

enum PageLandingTextHighlightCollectionOrder {
  name_ASC
  name_DESC
  styling_ASC
  styling_DESC
  sys_firstPublishedAt_ASC
  sys_firstPublishedAt_DESC
  sys_id_ASC
  sys_id_DESC
  sys_publishedAt_ASC
  sys_publishedAt_DESC
  sys_publishedVersion_ASC
  sys_publishedVersion_DESC
}

"""
[See type definition](https://app.contentful.com/spaces/z4jcpsk27kde/content_types/pageProduct)
"""
type PageProduct implements Entry {
  contentfulMetadata: ContentfulMetadata!
  description(locale: String): String
  featuredProductImage(locale: String, preview: Boolean): Asset
  internalName(locale: String): String
  linkedFrom(allowedLocales: [String]): PageProductLinkingCollections
  name(locale: String): String
  price(locale: String): String
  productImagesCollectionCollection(limit: Int = 100, locale: String, preview: Boolean, skip: Int = 0): AssetCollection
  seoFields(locale: String, preview: Boolean, where: ComponentSeoFilter): ComponentSeo
  slug(locale: String): String
  sys: Sys!
}

type PageProductCollection {
  items: [PageProduct]!
  limit: Int!
  skip: Int!
  total: Int!
}

input PageProductFilter {
  AND: [PageProductFilter]
  OR: [PageProductFilter]
  contentfulMetadata: ContentfulMetadataFilter
  description: String
  description_contains: String
  description_exists: Boolean
  description_in: [String]
  description_not: String
  description_not_contains: String
  description_not_in: [String]
  featuredProductImage_exists: Boolean
  internalName: String
  internalName_contains: String
  internalName_exists: Boolean
  internalName_in: [String]
  internalName_not: String
  internalName_not_contains: String
  internalName_not_in: [String]
  name: String
  name_contains: String
  name_exists: Boolean
  name_in: [String]
  name_not: String
  name_not_contains: String
  name_not_in: [String]
  price: String
  price_contains: String
  price_exists: Boolean
  price_in: [String]
  price_not: String
  price_not_contains: String
  price_not_in: [String]
  productImagesCollectionCollection_exists: Boolean
  seoFields: cfComponentSeoNestedFilter
  seoFields_exists: Boolean
  slug: String
  slug_contains: String
  slug_exists: Boolean
  slug_in: [String]
  slug_not: String
  slug_not_contains: String
  slug_not_in: [String]
  sys: SysFilter
}

type PageProductLinkingCollections {
  entryCollection(limit: Int = 100, locale: String, preview: Boolean, skip: Int = 0): EntryCollection
  pageLandingCollection(limit: Int = 100, locale: String, order: [PageProductLinkingCollectionsPageLandingCollectionOrder], preview: Boolean, skip: Int = 0): PageLandingCollection
}

enum PageProductLinkingCollectionsPageLandingCollectionOrder {
  heroBannerHeadlineColor_ASC
  heroBannerHeadlineColor_DESC
  heroBannerHeadline_ASC
  heroBannerHeadline_DESC
  internalName_ASC
  internalName_DESC
  showTagCloud_ASC
  showTagCloud_DESC
  slug_ASC
  slug_DESC
  sys_firstPublishedAt_ASC
  sys_firstPublishedAt_DESC
  sys_id_ASC
  sys_id_DESC
  sys_publishedAt_ASC
  sys_publishedAt_DESC
  sys_publishedVersion_ASC
  sys_publishedVersion_DESC
}

enum PageProductOrder {
  description_ASC
  description_DESC
  internalName_ASC
  internalName_DESC
  name_ASC
  name_DESC
  price_ASC
  price_DESC
  slug_ASC
  slug_DESC
  sys_firstPublishedAt_ASC
  sys_firstPublishedAt_DESC
  sys_id_ASC
  sys_id_DESC
  sys_publishedAt_ASC
  sys_publishedAt_DESC
  sys_publishedVersion_ASC
  sys_publishedVersion_DESC
}

"""
[See type definition](https://app.contentful.com/spaces/z4jcpsk27kde/content_types/post)
"""
type Post implements Entry {
  author(locale: String, preview: Boolean, where: AuthorFilter): Author
  content(locale: String): PostContent
  contentfulMetadata: ContentfulMetadata!
  coverImage(locale: String, preview: Boolean): Asset
  date(locale: String): DateTime
  excerpt(locale: String): String
  linkedFrom(allowedLocales: [String]): PostLinkingCollections
  slug(locale: String): String
  sys: Sys!
  title(locale: String): String
}

type PostCollection {
  items: [Post]!
  limit: Int!
  skip: Int!
  total: Int!
}

type PostContent {
  json: JSON!
  links: PostContentLinks!
}

type PostContentAssets {
  block: [Asset]!
  hyperlink: [Asset]!
}

type PostContentEntries {
  block: [Entry]!
  hyperlink: [Entry]!
  inline: [Entry]!
}

type PostContentLinks {
  assets: PostContentAssets!
  entries: PostContentEntries!
  resources: PostContentResources!
}

type PostContentResources {
  block: [PostContentResourcesBlock!]!
  hyperlink: [PostContentResourcesHyperlink!]!
  inline: [PostContentResourcesInline!]!
}

type PostContentResourcesBlock implements ResourceLink {
  sys: ResourceSys!
}

type PostContentResourcesHyperlink implements ResourceLink {
  sys: ResourceSys!
}

type PostContentResourcesInline implements ResourceLink {
  sys: ResourceSys!
}

input PostFilter {
  AND: [PostFilter]
  OR: [PostFilter]
  author: cfAuthorNestedFilter
  author_exists: Boolean
  content_contains: String
  content_exists: Boolean
  content_not_contains: String
  contentfulMetadata: ContentfulMetadataFilter
  coverImage_exists: Boolean
  date: DateTime
  date_exists: Boolean
  date_gt: DateTime
  date_gte: DateTime
  date_in: [DateTime]
  date_lt: DateTime
  date_lte: DateTime
  date_not: DateTime
  date_not_in: [DateTime]
  excerpt: String
  excerpt_contains: String
  excerpt_exists: Boolean
  excerpt_in: [String]
  excerpt_not: String
  excerpt_not_contains: String
  excerpt_not_in: [String]
  slug: String
  slug_contains: String
  slug_exists: Boolean
  slug_in: [String]
  slug_not: String
  slug_not_contains: String
  slug_not_in: [String]
  sys: SysFilter
  title: String
  title_contains: String
  title_exists: Boolean
  title_in: [String]
  title_not: String
  title_not_contains: String
  title_not_in: [String]
}

type PostLinkingCollections {
  entryCollection(limit: Int = 100, locale: String, preview: Boolean, skip: Int = 0): EntryCollection
}

enum PostOrder {
  date_ASC
  date_DESC
  excerpt_ASC
  excerpt_DESC
  slug_ASC
  slug_DESC
  sys_firstPublishedAt_ASC
  sys_firstPublishedAt_DESC
  sys_id_ASC
  sys_id_DESC
  sys_publishedAt_ASC
  sys_publishedAt_DESC
  sys_publishedVersion_ASC
  sys_publishedVersion_DESC
  title_ASC
  title_DESC
}

"""
The 'Quality' type represents quality as whole numeric values between `1` and `100`.
"""
scalar Quality

type Query {
  _node(id: ID!, locale: String, preview: Boolean): _Node
  asset(id: String!, locale: String, preview: Boolean): Asset
  assetCollection(limit: Int = 100, locale: String, order: [AssetOrder], preview: Boolean, skip: Int = 0, where: AssetFilter): AssetCollection
  author(id: String!, locale: String, preview: Boolean): Author
  authorCollection(limit: Int = 100, locale: String, order: [AuthorOrder], preview: Boolean, skip: Int = 0, where: AuthorFilter): AuthorCollection
  componentAuthor(id: String!, locale: String, preview: Boolean): ComponentAuthor
  componentAuthorCollection(limit: Int = 100, locale: String, order: [ComponentAuthorOrder], preview: Boolean, skip: Int = 0, where: ComponentAuthorFilter): ComponentAuthorCollection
  componentRichImage(id: String!, locale: String, preview: Boolean): ComponentRichImage
  componentRichImageCollection(limit: Int = 100, locale: String, order: [ComponentRichImageOrder], preview: Boolean, skip: Int = 0, where: ComponentRichImageFilter): ComponentRichImageCollection
  componentSeo(id: String!, locale: String, preview: Boolean): ComponentSeo
  componentSeoCollection(limit: Int = 100, locale: String, order: [ComponentSeoOrder], preview: Boolean, skip: Int = 0, where: ComponentSeoFilter): ComponentSeoCollection
  componentTextHighlight(id: String!, locale: String, preview: Boolean): ComponentTextHighlight
  componentTextHighlightCollection(limit: Int = 100, locale: String, order: [ComponentTextHighlightOrder], preview: Boolean, skip: Int = 0, where: ComponentTextHighlightFilter): ComponentTextHighlightCollection
  entryCollection(limit: Int = 100, locale: String, order: [EntryOrder], preview: Boolean, skip: Int = 0, where: EntryFilter): EntryCollection
  featuredProductImage(id: String!, locale: String, preview: Boolean): FeaturedProductImage
  featuredProductImageCollection(limit: Int = 100, locale: String, order: [FeaturedProductImageOrder], preview: Boolean, skip: Int = 0, where: FeaturedProductImageFilter): FeaturedProductImageCollection
  footerItemGroup(id: String!, locale: String, preview: Boolean): FooterItemGroup
  footerItemGroupCollection(limit: Int = 100, locale: String, order: [FooterItemGroupOrder], preview: Boolean, skip: Int = 0, where: FooterItemGroupFilter): FooterItemGroupCollection
  navItem(id: String!, locale: String, preview: Boolean): NavItem
  navItemCollection(limit: Int = 100, locale: String, order: [NavItemOrder], preview: Boolean, skip: Int = 0, where: NavItemFilter): NavItemCollection
  navItemGroup(id: String!, locale: String, preview: Boolean): NavItemGroup
  navItemGroupCollection(limit: Int = 100, locale: String, order: [NavItemGroupOrder], preview: Boolean, skip: Int = 0, where: NavItemGroupFilter): NavItemGroupCollection
  pageBlogPost(id: String!, locale: String, preview: Boolean): PageBlogPost
  pageBlogPostCollection(limit: Int = 100, locale: String, order: [PageBlogPostOrder], preview: Boolean, skip: Int = 0, where: PageBlogPostFilter): PageBlogPostCollection
  pageLanding(id: String!, locale: String, preview: Boolean): PageLanding
  pageLandingCollection(limit: Int = 100, locale: String, order: [PageLandingOrder], preview: Boolean, skip: Int = 0, where: PageLandingFilter): PageLandingCollection
  pageProduct(id: String!, locale: String, preview: Boolean): PageProduct
  pageProductCollection(limit: Int = 100, locale: String, order: [PageProductOrder], preview: Boolean, skip: Int = 0, where: PageProductFilter): PageProductCollection
  post(id: String!, locale: String, preview: Boolean): Post
  postCollection(limit: Int = 100, locale: String, order: [PostOrder], preview: Boolean, skip: Int = 0, where: PostFilter): PostCollection
}

interface ResourceLink {
  sys: ResourceSys!
}

type ResourceSys {
  linkType: String!
  urn: String!
}

type Sys {
  environmentId: String!
  firstPublishedAt: DateTime
  id: String!
  publishedAt: DateTime
  publishedVersion: Int
  spaceId: String!
}

input SysFilter {
  firstPublishedAt: DateTime
  firstPublishedAt_exists: Boolean
  firstPublishedAt_gt: DateTime
  firstPublishedAt_gte: DateTime
  firstPublishedAt_in: [DateTime]
  firstPublishedAt_lt: DateTime
  firstPublishedAt_lte: DateTime
  firstPublishedAt_not: DateTime
  firstPublishedAt_not_in: [DateTime]
  id: String
  id_contains: String
  id_exists: Boolean
  id_in: [String]
  id_not: String
  id_not_contains: String
  id_not_in: [String]
  publishedAt: DateTime
  publishedAt_exists: Boolean
  publishedAt_gt: DateTime
  publishedAt_gte: DateTime
  publishedAt_in: [DateTime]
  publishedAt_lt: DateTime
  publishedAt_lte: DateTime
  publishedAt_not: DateTime
  publishedAt_not_in: [DateTime]
  publishedVersion: Float
  publishedVersion_exists: Boolean
  publishedVersion_gt: Float
  publishedVersion_gte: Float
  publishedVersion_in: [Float]
  publishedVersion_lt: Float
  publishedVersion_lte: Float
  publishedVersion_not: Float
  publishedVersion_not_in: [Float]
}

interface _Node {
  _id: ID!
}

input cfAuthorNestedFilter {
  AND: [cfAuthorNestedFilter]
  OR: [cfAuthorNestedFilter]
  contentfulMetadata: ContentfulMetadataFilter
  name: String
  name_contains: String
  name_exists: Boolean
  name_in: [String]
  name_not: String
  name_not_contains: String
  name_not_in: [String]
  picture_exists: Boolean
  sys: SysFilter
}

input cfComponentAuthorNestedFilter {
  AND: [cfComponentAuthorNestedFilter]
  OR: [cfComponentAuthorNestedFilter]
  avatar_exists: Boolean
  contentfulMetadata: ContentfulMetadataFilter
  internalName: String
  internalName_contains: String
  internalName_exists: Boolean
  internalName_in: [String]
  internalName_not: String
  internalName_not_contains: String
  internalName_not_in: [String]
  name: String
  name_contains: String
  name_exists: Boolean
  name_in: [String]
  name_not: String
  name_not_contains: String
  name_not_in: [String]
  sys: SysFilter
}

input cfComponentSeoNestedFilter {
  AND: [cfComponentSeoNestedFilter]
  OR: [cfComponentSeoNestedFilter]
  canonicalUrl: String
  canonicalUrl_contains: String
  canonicalUrl_exists: Boolean
  canonicalUrl_in: [String]
  canonicalUrl_not: String
  canonicalUrl_not_contains: String
  canonicalUrl_not_in: [String]
  contentfulMetadata: ContentfulMetadataFilter
  follow: Boolean
  follow_exists: Boolean
  follow_not: Boolean
  index: Boolean
  index_exists: Boolean
  index_not: Boolean
  internalName: String
  internalName_contains: String
  internalName_exists: Boolean
  internalName_in: [String]
  internalName_not: String
  internalName_not_contains: String
  internalName_not_in: [String]
  noFollow: Boolean
  noFollow_exists: Boolean
  noFollow_not: Boolean
  noIndex: Boolean
  noIndex_exists: Boolean
  noIndex_not: Boolean
  pageDescription: String
  pageDescription_contains: String
  pageDescription_exists: Boolean
  pageDescription_in: [String]
  pageDescription_not: String
  pageDescription_not_contains: String
  pageDescription_not_in: [String]
  pageTitle: String
  pageTitle_contains: String
  pageTitle_exists: Boolean
  pageTitle_in: [String]
  pageTitle_not: String
  pageTitle_not_contains: String
  pageTitle_not_in: [String]
  shareImagesCollection_exists: Boolean
  sys: SysFilter
}

input cfComponentTextHighlightNestedFilter {
  AND: [cfComponentTextHighlightNestedFilter]
  OR: [cfComponentTextHighlightNestedFilter]
  content_contains: String
  content_exists: Boolean
  content_not_contains: String
  contentfulMetadata: ContentfulMetadataFilter
  name: String
  name_contains: String
  name_exists: Boolean
  name_in: [String]
  name_not: String
  name_not_contains: String
  name_not_in: [String]
  styling: String
  styling_contains: String
  styling_exists: Boolean
  styling_in: [String]
  styling_not: String
  styling_not_contains: String
  styling_not_in: [String]
  sys: SysFilter
}

input cfNavItemNestedFilter {
  AND: [cfNavItemNestedFilter]
  OR: [cfNavItemNestedFilter]
  contentfulMetadata: ContentfulMetadataFilter
  href: String
  href_contains: String
  href_exists: Boolean
  href_in: [String]
  href_not: String
  href_not_contains: String
  href_not_in: [String]
  name: String
  name_contains: String
  name_exists: Boolean
  name_in: [String]
  name_not: String
  name_not_contains: String
  name_not_in: [String]
  sys: SysFilter
}

input cfPageBlogPostNestedFilter {
  AND: [cfPageBlogPostNestedFilter]
  OR: [cfPageBlogPostNestedFilter]
  author_exists: Boolean
  content_contains: String
  content_exists: Boolean
  content_not_contains: String
  contentfulMetadata: ContentfulMetadataFilter
  featuredImage_exists: Boolean
  internalName: String
  internalName_contains: String
  internalName_exists: Boolean
  internalName_in: [String]
  internalName_not: String
  internalName_not_contains: String
  internalName_not_in: [String]
  publishedDate: DateTime
  publishedDate_exists: Boolean
  publishedDate_gt: DateTime
  publishedDate_gte: DateTime
  publishedDate_in: [DateTime]
  publishedDate_lt: DateTime
  publishedDate_lte: DateTime
  publishedDate_not: DateTime
  publishedDate_not_in: [DateTime]
  relatedBlogPostsCollection_exists: Boolean
  seoFields_exists: Boolean
  shortDescription: String
  shortDescription_contains: String
  shortDescription_exists: Boolean
  shortDescription_in: [String]
  shortDescription_not: String
  shortDescription_not_contains: String
  shortDescription_not_in: [String]
  slug: String
  slug_contains: String
  slug_exists: Boolean
  slug_in: [String]
  slug_not: String
  slug_not_contains: String
  slug_not_in: [String]
  sys: SysFilter
  title: String
  title_contains: String
  title_exists: Boolean
  title_in: [String]
  title_not: String
  title_not_contains: String
  title_not_in: [String]
}

input cfPageProductNestedFilter {
  AND: [cfPageProductNestedFilter]
  OR: [cfPageProductNestedFilter]
  contentfulMetadata: ContentfulMetadataFilter
  description: String
  description_contains: String
  description_exists: Boolean
  description_in: [String]
  description_not: String
  description_not_contains: String
  description_not_in: [String]
  featuredProductImage_exists: Boolean
  internalName: String
  internalName_contains: String
  internalName_exists: Boolean
  internalName_in: [String]
  internalName_not: String
  internalName_not_contains: String
  internalName_not_in: [String]
  name: String
  name_contains: String
  name_exists: Boolean
  name_in: [String]
  name_not: String
  name_not_contains: String
  name_not_in: [String]
  price: String
  price_contains: String
  price_exists: Boolean
  price_in: [String]
  price_not: String
  price_not_contains: String
  price_not_in: [String]
  productImagesCollectionCollection_exists: Boolean
  seoFields_exists: Boolean
  slug: String
  slug_contains: String
  slug_exists: Boolean
  slug_in: [String]
  slug_not: String
  slug_not_contains: String
  slug_not_in: [String]
  sys: SysFilter
}